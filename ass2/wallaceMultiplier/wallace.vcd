$date
	Tue May  7 19:55:03 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module TBwallace $end
$var wire 8 ! result [7:0] $end
$var reg 4 " x [3:0] $end
$var reg 4 # y [3:0] $end
$scope module dut $end
$var wire 7 $ prod0 [6:0] $end
$var wire 7 % prod1 [6:0] $end
$var wire 7 & prod2 [6:0] $end
$var wire 7 ' prod3 [6:0] $end
$var wire 4 ( x [3:0] $end
$var wire 4 ) y [3:0] $end
$var wire 1 * sum37 $end
$var wire 1 + sum36 $end
$var wire 1 , sum35 $end
$var wire 1 - sum34 $end
$var wire 1 . sum32 $end
$var wire 1 / sum26 $end
$var wire 1 0 sum25 $end
$var wire 1 1 sum24 $end
$var wire 1 2 sum23 $end
$var wire 1 3 sum22 $end
$var wire 1 4 sum15 $end
$var wire 1 5 sum14 $end
$var wire 1 6 sum13 $end
$var wire 1 7 sum12 $end
$var wire 1 8 sum11 $end
$var wire 8 9 result [7:0] $end
$var wire 1 : carry37 $end
$var wire 1 ; carry36 $end
$var wire 1 < carry35 $end
$var wire 1 = carry34 $end
$var wire 1 > carry32 $end
$var wire 1 ? carry26 $end
$var wire 1 @ carry25 $end
$var wire 1 A carry24 $end
$var wire 1 B carry23 $end
$var wire 1 C carry22 $end
$var wire 1 D carry15 $end
$var wire 1 E carry14 $end
$var wire 1 F carry13 $end
$var wire 1 G carry12 $end
$var wire 1 H carry11 $end
$scope module fa12 $end
$var wire 1 G carry $end
$var wire 1 I cin $end
$var wire 1 7 sum $end
$var wire 1 J x $end
$var wire 1 K y $end
$upscope $end
$scope module fa13 $end
$var wire 1 F carry $end
$var wire 1 L cin $end
$var wire 1 6 sum $end
$var wire 1 M x $end
$var wire 1 N y $end
$upscope $end
$scope module fa14 $end
$var wire 1 E carry $end
$var wire 1 O cin $end
$var wire 1 5 sum $end
$var wire 1 P x $end
$var wire 1 Q y $end
$upscope $end
$scope module fa23 $end
$var wire 1 B carry $end
$var wire 1 6 cin $end
$var wire 1 2 sum $end
$var wire 1 R x $end
$var wire 1 G y $end
$upscope $end
$scope module fa24 $end
$var wire 1 A carry $end
$var wire 1 5 cin $end
$var wire 1 1 sum $end
$var wire 1 F x $end
$var wire 1 > y $end
$upscope $end
$scope module fa25 $end
$var wire 1 @ carry $end
$var wire 1 0 sum $end
$var wire 1 E x $end
$var wire 1 A y $end
$var wire 1 4 cin $end
$upscope $end
$scope module fa26 $end
$var wire 1 ? carry $end
$var wire 1 S cin $end
$var wire 1 / sum $end
$var wire 1 @ y $end
$var wire 1 D x $end
$upscope $end
$scope module ha11 $end
$var wire 1 H carry $end
$var wire 1 T cin $end
$var wire 1 8 sum $end
$var wire 1 U x $end
$var wire 1 V y $end
$upscope $end
$scope module ha15 $end
$var wire 1 D carry $end
$var wire 1 4 sum $end
$var wire 1 W x $end
$var wire 1 X y $end
$upscope $end
$scope module ha22 $end
$var wire 1 C carry $end
$var wire 1 7 cin $end
$var wire 1 3 sum $end
$var wire 1 Y x $end
$var wire 1 H y $end
$upscope $end
$scope module ha32 $end
$var wire 1 > carry $end
$var wire 1 . sum $end
$var wire 1 C x $end
$var wire 1 2 y $end
$upscope $end
$scope module ha34 $end
$var wire 1 = carry $end
$var wire 1 - sum $end
$var wire 1 B x $end
$var wire 1 1 y $end
$upscope $end
$scope module ha35 $end
$var wire 1 < carry $end
$var wire 1 , sum $end
$var wire 1 = x $end
$var wire 1 0 y $end
$upscope $end
$scope module ha36 $end
$var wire 1 ; carry $end
$var wire 1 + sum $end
$var wire 1 < x $end
$var wire 1 / y $end
$upscope $end
$scope module ha37 $end
$var wire 1 : carry $end
$var wire 1 * sum $end
$var wire 1 ; x $end
$var wire 1 ? y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0Y
0X
0W
1V
0U
0T
0S
0R
0Q
0P
0O
1N
0M
0L
0K
1J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
b1111 9
18
17
16
05
04
13
12
01
00
0/
1.
0-
0,
0+
0*
b11 )
b101 (
b0 '
b0 &
b101 %
b101 $
b11 #
b101 "
b1111 !
$end
#20000
1,
10
1A
03
0-
1.
01
12
1F
15
07
1G
0H
06
18
1I
1L
1Q
b101010 !
b101010 9
0J
b111 &
1K
0U
b111 %
b0 $
b110 #
b110 )
b111 "
b111 (
#40000
1=
1B
0*
0.
0?
0-
0A
02
11
1+
16
0@
1,
1/
00
0G
0F
1R
1S
0I
b1100011 !
b1100011 9
1M
04
b1001 '
b1001 $
0L
0Q
0W
0K
0N
1P
b0 &
b1001 %
b1011 #
b1011 )
b1001 "
b1001 (
#60000
0,
0=
0B
01
0+
08
05
06
0/
0R
0S
0V
0P
b0 !
b0 9
0M
b0 '
b0 %
b0 $
b0 #
b0 )
b0 "
b0 (
#80000
b1111 "
b1111 (
#100000
b1111 #
b1111 )
b0 "
b0 (
#120000
