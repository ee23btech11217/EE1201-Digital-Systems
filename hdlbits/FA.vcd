$date
	Sun Apr 14 17:14:39 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_FA $end
$var wire 1 ! sum $end
$var wire 1 " cout $end
$var reg 1 # a $end
$var reg 1 $ b $end
$var reg 1 % cin $end
$var reg 1 & clk $end
$scope module dut $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 1 % cin $end
$var wire 1 & clk $end
$var wire 1 ! sum $end
$var wire 1 " cout $end
$var wire 1 ' cinandaxorb $end
$var wire 1 ( axorb $end
$var wire 1 ) aandb $end
$scope module swap1 $end
$var wire 1 # Cin $end
$var wire 1 $ I1 $end
$var wire 1 * I2 $end
$var wire 1 & clk $end
$var reg 1 + Cout $end
$var reg 1 ( O1 $end
$var reg 1 , O2 $end
$upscope $end
$scope module swap2 $end
$var wire 1 ( Cin $end
$var wire 1 % I1 $end
$var wire 1 - I2 $end
$var wire 1 & clk $end
$var reg 1 . Cout $end
$var reg 1 ! O1 $end
$var reg 1 / O2 $end
$upscope $end
$scope module swap3 $end
$var wire 1 % Cin $end
$var wire 1 0 I1 $end
$var wire 1 ( I2 $end
$var wire 1 & clk $end
$var reg 1 1 Cout $end
$var reg 1 ' O1 $end
$var reg 1 2 O2 $end
$upscope $end
$scope module swap4 $end
$var wire 1 # Cin $end
$var wire 1 3 I1 $end
$var wire 1 $ I2 $end
$var wire 1 & clk $end
$var reg 1 4 Cout $end
$var reg 1 ) O1 $end
$var reg 1 5 O2 $end
$upscope $end
$scope module swap5 $end
$var wire 1 ) Cin $end
$var wire 1 6 I1 $end
$var wire 1 ' I2 $end
$var wire 1 & clk $end
$var reg 1 7 Cout $end
$var reg 1 8 O1 $end
$var reg 1 " O2 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
18
07
16
05
04
03
02
01
00
1/
0.
1-
1,
0+
1*
0)
0(
0'
0&
0%
0$
0#
0"
0!
$end
#5
1&
#10
0&
#15
1&
#20
1.
0/
1!
12
1+
0,
1(
14
0&
1#
#25
1&
#30
0&
#35
1&
#40
0+
04
15
0&
0*
1$
0#
#45
1&
#50
0&
#55
1&
#60
0.
1/
0!
02
17
1"
08
1+
1,
0(
14
05
1)
0&
1#
#65
1&
#70
0&
#75
1&
#80
07
0"
18
0/
1!
11
0+
04
0)
0&
0-
1%
1*
0$
0#
#85
1&
#90
0&
#95
1&
#100
1"
1.
1/
0!
1'
1+
0,
1(
14
0&
1#
#105
1&
#110
0&
#115
1&
#120
0+
04
15
0&
0*
1$
0#
#125
1&
#130
0&
#135
1&
#140
08
0.
0/
1!
0'
17
1+
1,
0(
14
05
1)
0&
1#
#145
1&
#150
0&
#155
1&
#160
0&
