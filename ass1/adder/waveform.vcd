$date
	Mon Apr  1 20:37:27 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module full_adder_8bit_tb $end
$var wire 8 ! sum [7:0] $end
$var wire 1 " cout $end
$var reg 8 # h [7:0] $end
$var reg 8 $ x [7:0] $end
$scope module dut $end
$var wire 8 % h [7:0] $end
$var wire 8 & x [7:0] $end
$var wire 8 ' sum [7:0] $end
$var wire 1 " cout $end
$var wire 9 ( carry [8:0] $end
$scope begin genblk1[0] $end
$scope module fa $end
$var wire 1 ) cin $end
$var wire 1 * cout $end
$var wire 1 + h $end
$var wire 1 , sum $end
$var wire 1 - x $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module fa $end
$var wire 1 . cin $end
$var wire 1 / cout $end
$var wire 1 0 h $end
$var wire 1 1 sum $end
$var wire 1 2 x $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module fa $end
$var wire 1 3 cin $end
$var wire 1 4 cout $end
$var wire 1 5 h $end
$var wire 1 6 sum $end
$var wire 1 7 x $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module fa $end
$var wire 1 8 cin $end
$var wire 1 9 cout $end
$var wire 1 : h $end
$var wire 1 ; sum $end
$var wire 1 < x $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module fa $end
$var wire 1 = cin $end
$var wire 1 > cout $end
$var wire 1 ? h $end
$var wire 1 @ sum $end
$var wire 1 A x $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module fa $end
$var wire 1 B cin $end
$var wire 1 C cout $end
$var wire 1 D h $end
$var wire 1 E sum $end
$var wire 1 F x $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module fa $end
$var wire 1 G cin $end
$var wire 1 H cout $end
$var wire 1 I h $end
$var wire 1 J sum $end
$var wire 1 K x $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module fa $end
$var wire 1 L cin $end
$var wire 1 M cout $end
$var wire 1 N h $end
$var wire 1 O sum $end
$var wire 1 P x $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0P
1O
1N
0M
0L
1K
1J
0I
0H
0G
0F
1E
1D
0C
0B
1A
1@
0?
0>
0=
0<
1;
1:
09
08
17
16
05
04
03
02
11
10
0/
0.
1-
1,
0+
0*
0)
b0 (
b11111111 '
b1010101 &
b10101010 %
b1010101 $
b10101010 #
0"
b11111111 !
$end
#20
1"
1M
0O
1L
1H
0J
1G
1C
0E
1B
1>
0@
1=
19
0;
18
14
06
13
1/
01
1.
b111111110 (
1*
b0 !
b0 '
0,
1+
00
0:
0D
0N
12
1<
1F
1P
b1 #
b1 %
b11111111 $
b11111111 &
#50
